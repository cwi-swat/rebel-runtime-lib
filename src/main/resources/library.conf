akka-http-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 16
  }
  throughput = 100
}

// No-Op persistence default configuration
// use by setting
// akka.persistence.journal.plugin = "noop-journal"
// akka.persistence.snapshot-store.plugin = "noop-snapshot-store"
noop-journal {
  # Class name of the plugin.
  class = "com.ing.rebel.util.persistence.NoOpJournal"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka.actor.default-dispatcher"
}
noop-snapshot-store {
  # Class name of the plugin.
  class = "com.ing.rebel.util.persistence.NoOpSnapshotStore"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"
}

kamon.internal-config {
  // empty extensions for akka to make sure kamon doesn't load them...
  akka.extensions = []
}

akka {
  loglevel = INFO

  extensions = [
    "akka.persistence.Persistence",
    "com.ing.rebel.sync.TwoPhaseCommitManagerSharding"
  ]

  actor {
    provider = cluster

    // off recommended by lightbend because of security
    allow-java-serialization = off

    serializers {
      # Define kryo serializer
      kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
    }
    serialization-bindings {
      "com.ing.rebel.kryo.SerializeWithKryo" = kryo
    }

    // SingleConsumerOnlyUnboundedMailbox is an even more efficient mailbox, and it can be used as the default mailbox,
    // but it cannot be used with a BalancingDispatcher.
    default-mailbox {
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
    }
  }

  library-extensions += "com.ing.rebel.config.RebelConfig"
  //  library-extensions += "com.ing.rebel.sync.TwoPhaseCommitManagerSharding"

  remote {
//    enabled-transports = [akka.remote.netty.tcp]
    log-remote-lifecycle-events = off

    artery {
      enabled = on
//      transport = aeron-udp
      transport = tcp
      canonical.hostname = localhost
      canonical.port = 0
    }
  }

  persistence {
    journal {
      plugin = "cassandra-journal"
      auto-start-journals = ["cassandra-journal"]
    }
    snapshot-store.plugin = "cassandra-snapshot-store"
    // increase this to deal with passivation and also recovery?
    max-concurrent-recoveries = 150
  }

  http {
    server {
      max-connections = 4096
      pipelining-limit = 128
    }
  }
  cluster.distributed-data.durable.lmdb.dir = "target/ddata"

  scheduler {
    tick-duration = 5ms
  }
}

akka-kryo-serialization {
  idstrategy = "automatic"
  implicit-registration-logging = true
  kryo-initializer = "com.ing.rebel.kryo.KryoInit"
  resolve-subclasses = true
  //      post-serialization-transformations = "lz4"
}

akka.actor.default-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 16
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 6
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 128
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 20
}

akka.cluster.use-dispatcher = cluster-dispatcher

cluster-dispatcher {
  type = "Dispatcher"
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-max = 8
  }
}

// To make cassandra host easily configurable
cassandra-journal {
  contact-point: "127.0.0.1" // default from library.conf
  contact-point: ${?CASSANDRA_HOST}
  contact-points = [${cassandra-journal.contact-point}]
  port = ${?CASSANDRA_PORT}
  cassandra-2x-compat = ${?CASSANDRA-2X-COMPAT}
  //  keyspace-autocreate = false
  keyspace-autocreate = ${?CASSANDRA_CREATE}
  //  tables-autocreate = false
  tables-autocreate = ${?CASSANDRA_CREATE}
  replication-factor = 3
}

cassandra-snapshot-store {
  contact-points = ${?cassandra-journal.contact-points}
  cassandra-2x-compat = ${?CASSANDRA-2X-COMPAT}
  port = ${?CASSANDRA_PORT}
  //  keyspace-autocreate = false
  keyspace-autocreate = ${?CASSANDRA_CREATE}
  //  tables-autocreate = false
  tables-autocreate = ${?CASSANDRA_CREATE}
  replication-factor = 3
}