version: '2'
services:
  db:
    image: cassandra_reporting:latest
#    image: cassandra:3.0
#    environment:
#        - JAVA_OPTS="-Xmx1g"
#        - JVM_OPTS="$JVM_OPTS -Dcassandra.metricsReporterConfigFile=influxreporting.yaml"
#        - CASSANDRA_CLUSTER_NAME="My Cluster"
#        - CASSANDRA_START_RPC=true
    environment:
      - LOCAL_JMX=no
      - JVM_EXTRA_OPTS=-Djava.rmi.server.hostname=127.0.0.1
    ulimits:
      memlock: -1
      nproc: 32768
      nofile: 100000
#    volumes:
#      - ./aws/cassandra_reporting/src/universal/metrics-graphite-3.2.0.0.jar:/usr/share/cassandra/lib/metrics-graphite-3.2.0.0.jar
#      - ./aws/cassandra_reporting/src/universal/influx-reporting.yaml:/etc/cassandra/influx-reporting.yaml
    privileged: true
#    environment:
#      - "CASSANDRA_BROADCAST_ADDRESS=1.1.1.1"
#      - "CASSANDRA_LISTEN_ADDRESS=1.1.1.1"
#      - "CASSANDRA_RPC_ADDRESS=1.1.1.1"
    links:
      - metrics
    ports:
        - "7000:7000"
        - "7001:7001"
#        - "7199:7199"
        - "9042:9042"
        - "9160:9160"
#    command: ["-Dcassandra.metricsReporterConfigFile=influx-reporting.yaml"]
#  db2:
#  #  docker run --name some-cassandra2 -d -e CASSANDRA_SEEDS="$(docker inspect --format='{{ .NetworkSettings.IPAddress }}' some-cassandra)" cassandra:tag
#    image: cassandra_reporting:latest
#    links:
#      - db:seed
#    restart: always
#    environment:
#      - "CASSANDRA_SEEDS=db"
  seed:
    image: simple-transaction:latest
    links:
       - db
       - metrics
    ports:
     - "2551:2551" # Akka Actor System port
     - "8080:8080" # REST endpoints
     - "8001:8001" # Visualisation
     - "1898:1898"
    environment:
     - "CASSANDRA_HOST=db"
#     - "CASSANDRA-2X-COMPAT=on"
     - "JAVA_OPTS=-Dcom.sun.management.jmxremote= -Dcom.sun.management.jmxremote.port=1898 -Dcom.sun.management.jmxremote.rmi.port=1898 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.local.only=false"
     # -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=7199 -Dcom.sun.management.jmxremote.rmi.port=7199"
    command:
#      // docker-machine/docker host ip address
      - "-Drebel.clustering.ip=seed"
      - "-Drebel.clustering.port=2551"
      - "-Dkamon.statsd.hostname=metrics"
      - "-Dkamon.statsd.port=8125"
      - "-Dkamon.influxdb.hostname=metrics"
      - "-Dkamon.influxdb.port=8086"
      - "-Dakka.loglevel=INFO"
#      - "-Drebel.sync.two-pc.retry-duration=1s"
      # required to let it work with single node C*
      - "-Dcassandra-journal.replication-factor=1"
      - "-Dcassandra-snapshot-store.replication-factor=1"
    volumes:
      - ./target/jfr:/opt/docker/jfr
  node:
    image: simple-transaction:latest
    links:
       - db
       - seed
       - metrics
    ports:
     - "2552" # Akka Actor System port
     - "8080" # REST endpoints
     - "8001" # Visualisation
    environment:
     - "CASSANDRA_HOST=db"
#     - "CASSANDRA-2X-COMPAT=on"
    command:
     # docker-machine/docker host ip address where seed is running
      - "-Dakka.cluster.seed-nodes.0=akka://rebel-system@seed:2551"
      - "-Drebel.clustering.ip=node"
      - "-Drebel.clustering.port=2552"
#      - "-Drebel.sync.type=twophasecommit"
      - "-Dakka.loglevel=INFO"
#      - "-Dkamon.statsd.hostname=metrics"
#      - "-Dkamon.statsd.port=8125"
      - "-Dkamon.influxdb.hostname=metrics"
      - "-Dkamon.influxdb.port=8086"
#      - "-Dkamon.influxdb.database=telegraf"
#      - "-Drebel.sync.two-pc.retry-duration=1s"
      # required to let it work with single node C*
      - "-Dcassandra-journal.replication-factor=1"
      - "-Dcassandra-snapshot-store.replication-factor=1"
#    volumes:
#      - ./target/jfr:/opt/docker/jfr
  metrics:
    image: grafana_influxdb:latest
#    image: samuelebistoletti/docker-statsd-influxdb-grafana
#    container_name: kamon-grafana-dashboard
    ports:
      - '80:3003' # grafana
      - '81:8888' # influxdb-admin
      - '8086:8086' # influxdb
      - '8088:8088' # backup
      - '8089:8089/udp'
#      - '22022:22'
      - '8125:8125/udp' # statsd
#      - '80:80'
#      - '81:81'
#      - '8125:8125/udp'
#      - '8126:8126'
      - '2003:2003' # graphite TCP
      - '2004:2004' # graphite UDP
    volumes:
#      - /tmp/data/whisper:/opt/graphite/storage/whisper
      - ./grafana:/var/lib/grafana
#      - /tmp/log/graphite:/opt/graphite/storage/log
      - ./aws/grafana_influxdb/src/universal/influxdb.conf/:/etc/influxdb/influxdb.conf
    environment:
      - "GF_DATABASE_TYPE=sqlite3"
  performance:
    image: generated-performancetest:latest
    links:
      - metrics
      - seed
    environment:
      - "REBEL_HOST=seed"
      - "JAVA_OPTS=-Dgatling.data.writers.0=console -Dgatling.data.writers.1=file -Dgatling.data.writers.2=graphite -Dgatling.data.graphite.host=metrics -Drebel.scenario.users=10 -Drebel.scenario.rps-throttle-per-node=100"
    volumes:
      - ./gatling/results:/opt/gatling/results
      # no user files to improve startup times
      - /tmp/myemptyfolder:/opt/gatling/user-files/
    command: "-s com.ing.corebank.rebel.simple_transaction.simple.OpenAccountSimulation"